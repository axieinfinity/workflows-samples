on:
  workflow_call:
    inputs:
      pnpm_version:
        description: "Optional pnpm version"
        required: false
        type: string
        default: "7.12.2"

      bun_version:
        description: "Optional bun version"
        required: false
        type: string
        default: "latest"

      node_version:
        description: "The Node version to download (if necessary) and use."
        required: false
        type: string
        default: "latest"

      registry_url:
        description: "Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN."
        required: false
        type: string
        default: "https://npm.pkg.github.com"

      scope:
        description: "Optional scope for authenticating against scoped registries."
        required: false
        type: string
        default: "@axieinfinity"
jobs:
  npm:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #v3.0.2

      - uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd #2.2.4
        with:
          version: ${{ inputs.pnpm_version }}

      - uses: xhyrom/setup-bun@0ec953ee6d7a21c8bcefd4afe696a83930d8bb63 #0.1.7
        with:
          bun-version: ${{ inputs.bun_version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Setup Node"
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 #v3.4.1
        with:
          node-version: "${{ inputs.node_version }}"
          registry-url: "${{ inputs.registry_url }}"
          scope: "${{ inputs.scope }}"

      - name: Install pnpm
        uses: pnpm/action-setup@cd2af74528f644555073f1e24557b269d7e03a8d #v2
        id: pnpm-install
        with:
          version: ${{ inputs.pnpm_version }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: "Check eslint"
        run: pnpm run lint

      - name: "Build Packages"
        run: pnpm run build

      - name: "Run unittest"
        run: pnpm run test
